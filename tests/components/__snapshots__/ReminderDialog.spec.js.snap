// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ReminderDialog/> Should match ReminderDialog snapshot 1`] = `
<WithStyles(ForwardRef(Dialog))
  aria-labelledby="form-dialog-title"
  classes={
    Object {
      "paper": "makeStyles-dialogPaper-7",
    }
  }
  onClose={[MockFunction]}
  open={true}
>
  <WithStyles(ForwardRef(DialogTitle))
    id="form-dialog-title"
  >
    Create a new reminder
  </WithStyles(ForwardRef(DialogTitle))>
  <WithStyles(ForwardRef(DialogContent))>
    <WithStyles(ForwardRef(DialogContentText))>
      Remember description field can only have a maximum of 30 characters.
    </WithStyles(ForwardRef(DialogContentText))>
    <WithStyles(ForwardRef(TextField))
      autoComplete="off"
      autoFocus={true}
      fullWidth={true}
      id="description"
      inputProps={
        Object {
          "maxLength": 30,
        }
      }
      label="Description"
      margin="dense"
      onChange={[Function]}
      type="email"
      value=""
    />
    <WithStyles(ForwardRef(Grid))
      className="makeStyles-gridContainer-2"
      container={true}
    >
      <WithStyles(ForwardRef(Grid))
        item={true}
        xs={4}
      >
        <WithStyles(ForwardRef(FormControl))
          className="makeStyles-formControl-3"
        >
          <WithStyles(ForwardRef(InputLabel))
            id="city-input-label"
          >
            City
          </WithStyles(ForwardRef(InputLabel))>
          <WithStyles(ForwardRef(Select))
            id="city-simple-select"
            labelId="city-simple-select-label"
            onChange={[Function]}
            value="London"
          >
            <WithStyles(ForwardRef(MenuItem))
              key="London"
              value="London"
            >
              London
            </WithStyles(ForwardRef(MenuItem))>
            <WithStyles(ForwardRef(MenuItem))
              key="Tegucigalpa"
              value="Tegucigalpa"
            >
              Tegucigalpa
            </WithStyles(ForwardRef(MenuItem))>
            <WithStyles(ForwardRef(MenuItem))
              key="Medellin"
              value="Medellin"
            >
              Medellin
            </WithStyles(ForwardRef(MenuItem))>
            <WithStyles(ForwardRef(MenuItem))
              key="Bogota"
              value="Bogota"
            >
              Bogota
            </WithStyles(ForwardRef(MenuItem))>
            <WithStyles(ForwardRef(MenuItem))
              key="Shanghai"
              value="Shanghai"
            >
              Shanghai
            </WithStyles(ForwardRef(MenuItem))>
            <WithStyles(ForwardRef(MenuItem))
              key="Moscow"
              value="Moscow"
            >
              Moscow
            </WithStyles(ForwardRef(MenuItem))>
            <WithStyles(ForwardRef(MenuItem))
              key="Toronto"
              value="Toronto"
            >
              Toronto
            </WithStyles(ForwardRef(MenuItem))>
            <WithStyles(ForwardRef(MenuItem))
              key="Madrid"
              value="Madrid"
            >
              Madrid
            </WithStyles(ForwardRef(MenuItem))>
            <WithStyles(ForwardRef(MenuItem))
              key="Berlin"
              value="Berlin"
            >
              Berlin
            </WithStyles(ForwardRef(MenuItem))>
            <WithStyles(ForwardRef(MenuItem))
              key="Washington"
              value="Washington"
            >
              Washington
            </WithStyles(ForwardRef(MenuItem))>
            <WithStyles(ForwardRef(MenuItem))
              key="Tokyo"
              value="Tokyo"
            >
              Tokyo
            </WithStyles(ForwardRef(MenuItem))>
            <WithStyles(ForwardRef(MenuItem))
              key="Paris"
              value="Paris"
            >
              Paris
            </WithStyles(ForwardRef(MenuItem))>
            <WithStyles(ForwardRef(MenuItem))
              key="New York City"
              value="New York City"
            >
              New York City
            </WithStyles(ForwardRef(MenuItem))>
          </WithStyles(ForwardRef(Select))>
        </WithStyles(ForwardRef(FormControl))>
      </WithStyles(ForwardRef(Grid))>
      <WithStyles(ForwardRef(Grid))
        item={true}
        xs={4}
      >
        <WithStyles(ForwardRef(FormControl))
          className="makeStyles-formControl-3"
        >
          <WithStyles(ForwardRef(InputLabel))
            className="makeStyles-greenMenuItem-5"
            id="color-input-label"
          >
            Color
          </WithStyles(ForwardRef(InputLabel))>
          <WithStyles(ForwardRef(Select))
            id="color-simple-select"
            labelId="color-simple-select-label"
            onChange={[Function]}
            value="green"
          >
            <WithStyles(ForwardRef(MenuItem))
              className="makeStyles-greenMenuItem-5"
              key="green"
              value="green"
            >
              green
            </WithStyles(ForwardRef(MenuItem))>
            <WithStyles(ForwardRef(MenuItem))
              className="makeStyles-redMenuItem-4"
              key="red"
              value="red"
            >
              red
            </WithStyles(ForwardRef(MenuItem))>
            <WithStyles(ForwardRef(MenuItem))
              className="makeStyles-yellowMenuItem-6"
              key="yellow"
              value="yellow"
            >
              yellow
            </WithStyles(ForwardRef(MenuItem))>
          </WithStyles(ForwardRef(Select))>
        </WithStyles(ForwardRef(FormControl))>
      </WithStyles(ForwardRef(Grid))>
    </WithStyles(ForwardRef(Grid))>
    <WithStyles(ForwardRef(Grid))
      className="makeStyles-gridContainer-2"
      container={true}
    >
      <WithStyles(ForwardRef(Grid))
        item={true}
        xs={4}
      >
        <WithStyles(ForwardRef(Typography))>
          Pick a date and time:
        </WithStyles(ForwardRef(Typography))>
        <t
          allowSameDay={false}
          customTimeInput={null}
          dateFormat="MM/dd/yyyy"
          dateFormatCalendar="LLLL yyyy"
          disabled={false}
          disabledKeyboardNavigation={false}
          dropdownMode="scroll"
          enableTabLoop={true}
          excludeScrollbar={true}
          inlineFocusSelectedMonth={false}
          monthsShown={1}
          nextMonthButtonLabel="Next Month"
          nextYearButtonLabel="Next Year"
          onBlur={[Function]}
          onCalendarClose={[Function]}
          onCalendarOpen={[Function]}
          onChange={[Function]}
          onClickOutside={[Function]}
          onFocus={[Function]}
          onInputClick={[Function]}
          onInputError={[Function]}
          onKeyDown={[Function]}
          onMonthChange={[Function]}
          onSelect={[Function]}
          onYearChange={[Function]}
          preventOpenOnFocus={false}
          previousMonthButtonLabel="Previous Month"
          previousYearButtonLabel="Previous Year"
          readOnly={false}
          renderDayContents={[Function]}
          selected="some date"
          shouldCloseOnSelect={true}
          showMonthYearPicker={false}
          showPopperArrow={true}
          showPreviousMonths={false}
          showQuarterYearPicker={false}
          showTimeInput={false}
          showTimeSelect={true}
          strictParsing={false}
          timeCaption="Time"
          timeInputLabel="Time"
          timeIntervals={30}
          withPortal={false}
        />
      </WithStyles(ForwardRef(Grid))>
      <WithStyles(ForwardRef(Grid))
        container={true}
        item={true}
        xs={8}
      >
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={12}
        >
          <WithStyles(ForwardRef(Typography))>
            Weather in 
            London
          </WithStyles(ForwardRef(Typography))>
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={4}
        >
          <WithStyles(ForwardRef(Typography))
            variant="caption"
          >
            Skies: 
          </WithStyles(ForwardRef(Typography))>
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={4}
        >
          <WithStyles(ForwardRef(Typography))
            variant="caption"
          >
            Temperature: 
          </WithStyles(ForwardRef(Typography))>
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={4}
        >
          <WithStyles(ForwardRef(Typography))
            variant="caption"
          >
            Max temperature: 
          </WithStyles(ForwardRef(Typography))>
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={4}
        >
          <WithStyles(ForwardRef(Typography))
            variant="caption"
          >
            Min temperature: 
          </WithStyles(ForwardRef(Typography))>
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={4}
        >
          <WithStyles(ForwardRef(Typography))
            variant="caption"
          >
            Feels like: 
          </WithStyles(ForwardRef(Typography))>
        </WithStyles(ForwardRef(Grid))>
      </WithStyles(ForwardRef(Grid))>
    </WithStyles(ForwardRef(Grid))>
  </WithStyles(ForwardRef(DialogContent))>
  <WithStyles(ForwardRef(DialogActions))>
    <WithStyles(ForwardRef(Button))
      color="primary"
      id="close-button"
      onClick={[MockFunction]}
    >
      close
    </WithStyles(ForwardRef(Button))>
    <WithStyles(ForwardRef(Button))
      color="primary"
      disabled={true}
      id="action-button"
      onClick={[Function]}
    >
      action
    </WithStyles(ForwardRef(Button))>
  </WithStyles(ForwardRef(DialogActions))>
</WithStyles(ForwardRef(Dialog))>
`;
